[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Bibishan Pandey <bibishan.b.pandey@gmail.com>"]
license = "no"
readme = "README.md"
classifiers = [
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "~0.88.0"
uvicorn = {extras = ["standard"], version = "~0.20.0"}
gunicorn = "~20.1.0"
click = "~8.1.3"
redis = "~4.4.0"
aiohttp = "~3.8.3"
fastapi-mvc = "^0.24.0"
pycryptodome = "^3.17"
base58 = "^2.1.1"
fastapi-mail = "^1.2.5"
loguru = "^0.6.0"
requests = "^2.28.2"
fastapi-camelcase = "^1.0.5"
fastapi-utils = "^0.2.1"
beanie = "^1.17.0"
dependency-injector = "^4.41.0"
httpx = "^0.23.3"
classy-fastapi = "^0.3.0"
pyjwt = "^2.6.0"
boto3 = "^1.26.75"
python-multipart = "^0.0.5"
cryptography = "^39.0.1"
apscheduler = "^3.10.0"
fastapi-pagination = "^0.12.3"
python-whois = "^0.8.0"
camel-converter = "^3.0.0"
sentry-sdk = {extras = ["fastapi"], version = "^1.24.0"}
tink = "^1.8.0"
temporalio = "^1.2.0"
mongomock-motor = "^0.0.20"
elastic-apm = "^6.17.0"
schemathesis = "^3.19.6"
common = {path = "../common", develop = true}

[tool.poetry.scripts]
backend = 'backend.cli:cli'

[tool.poetry.urls]
"Issues" = "/issues"

[tool.poetry.group.dev.dependencies]
pytest = "~7.2.0"
pytest-cov = "~4.0.0"
pytest-asyncio = "~0.20.3"
requests = "~2.28.1"
httpx = "~0.23.1"
aioresponses = "~0.7.3"
flake8 = "~5.0.4"
flake8-docstrings = "~1.6.0"
flake8-import-order = "~0.18.1"
flake8-todo = "^0.7"
black = "~22.8.0"
myst-parser = "~0.18.1"
sphinx-material = {git = "https://github.com/bashtage/sphinx-material.git"}
pallets-sphinx-themes = "^2.0.3"
sphinx = "^5.3.0"
pre-commit = "^3.0.4"
pytest-github-report = "^0.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = [
    "backend/config/gunicorn.py",
    "backend/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pass",
]
