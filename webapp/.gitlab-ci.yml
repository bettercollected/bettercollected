stages:
#    - test
    - build
    - deploy


build develop:
    stage: build
    image: docker:latest
    tags:
        - shell
    services:
        - docker:dind
    script:
        - docker info
        - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
        - docker build --build-arg NEXT_PUBLIC_NODE_ENV="production" -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:nightly --shm-size 512M .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
        - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        - docker push $CI_REGISTRY_IMAGE:nightly
    only:
        - develop

deploy develop:
    stage: deploy
    image: docker:latest

    services:
        - docker:dind
    variables:
        DOCKER_HOST: 172.31.0.6:2376
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker service update --force --with-registry-auth --image  $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA bettercollected-new_dev_webapp
    only:
        - develop

build staging:
    stage: build
    image: docker:latest
    tags:
        - shell
    services:
        - docker:dind
    script:
        - docker info
        - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
        - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || docker pull $CI_REGISTRY_IMAGE:latest || true
        - docker build --build-arg NEXT_PUBLIC_NODE_ENV="production" --build-arg NEXT_PUBLIC_NODE_ENV="development" -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:latest --shm-size 512M .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
        - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        - docker push $CI_REGISTRY_IMAGE:latest
    only:
        - master

deploy staging:
    stage: deploy
    image: docker:latest
    services:
        - docker:dind
    variables:
        DOCKER_HOST: 172.31.0.7:2376
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker service update --force --with-registry-auth --image  $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA bettercollected_staging_webapp
    only:
        - master

build release:
    stage: build
    image: docker:latest
    services:
        - docker:dind
    tags:
        - shell
    script:
        - docker info
        - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
        - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || docker pull $CI_REGISTRY_IMAGE:release || true
        - docker build --build-arg NEXT_PUBLIC_NODE_ENV="production" -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t  $CI_REGISTRY_IMAGE:release --shm-size 512M .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
        - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        - docker push $CI_REGISTRY_IMAGE:release
    only:
        - release

deploy release:
    stage: deploy
    image: docker:latest
    services:
        - docker:dind
    variables:
        DOCKER_HOST: 172.31.0.7:2376
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker service update --force --with-registry-auth --image  $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA bettercollected_webapp
    only:
        - release

#cypress-tests:
#    stage: test
#
#    image: cypress/base
#
#    tags:
#        - docker
#
#    script:
#        - yarn install --frozen-lockfile
#        - yarn run runHeadless
#
#    variables:
#        CYPRESS_baseUrl: "https://admin.bettercollected.com/login"